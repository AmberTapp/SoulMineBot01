"""Handlers for the application-related menu."""

from __future__ import annotations

import logging

from telegram import Update
from telegram.ext import ContextTypes

from ...config.database import get_db
from ..keyboards.main_keyboard import (
    get_app_keyboard,
    get_back_to_main_keyboard,
    get_main_keyboard,
)
from ..utils.database import get_user_by_telegram_id

logger = logging.getLogger(__name__)


async def handle_app_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle the "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" button from the main menu."""

    user = update.effective_user
    with get_db() as db:
        user_obj = get_user_by_telegram_id(db, str(user.id))

    if not user_obj:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start",
        )
        return

    app_message = (
        "üì± *–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ SoulMine*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n\n"
        "‚Ä¢ üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Äî –ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–∞ —Å–∞–π—Ç–µ\n"
        "‚Ä¢ üì± Mini App ‚Äî –ª—ë–≥–∫–∞—è –≤–µ—Ä—Å–∏—è –≤ Telegram\n"
        "‚Ä¢ üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–æ—à–µ–ª—ë–∫ ‚Äî –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–∞–º–∏ $LOVE\n\n"
        "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?"
    )

    await update.message.reply_text(
        app_message,
        reply_markup=get_app_keyboard(),
        parse_mode="Markdown",
    )


async def link_wallet_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Respond to the ¬´link wallet¬ª callback button."""

    query = update.callback_query
    await query.answer()

    wallet_message = (
        "üîó *–ü—Ä–∏–≤—è–∑–∫–∞ –∫–æ—à–µ–ª—å–∫–∞*\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å TON-–∫–æ—à–µ–ª—ë–∫:\n"
        "1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ SoulMine.\n"
        "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª ¬´–ö–æ—à–µ–ª—ë–∫¬ª.\n"
        "3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ.\n\n"
        "üëâ [–ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–æ—à–µ–ª—ë–∫](https://soulmine.app/wallet)\n\n"
        "–ü–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–∫–µ–Ω–∞–º–∏ $LOVE –∏ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—ã."
    )

    await query.edit_message_text(
        wallet_message,
        reply_markup=get_back_to_main_keyboard(),
        parse_mode="Markdown",
    )


async def open_web_app_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Respond to the ¬´open web app¬ª callback button."""

    query = update.callback_query
    await query.answer()

    web_app_message = (
        "üåê *–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ SoulMine*\n\n"
        "–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:\n"
        "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å\n"
        "‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–∏—Å–∫\n"
        "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –∏ –∫–æ—à–µ–ª—å–∫–æ–º\n\n"
        "üëâ [–û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ](https://soulmine.app)"
    )

    await query.edit_message_text(
        web_app_message,
        reply_markup=get_back_to_main_keyboard(),
        parse_mode="Markdown",
    )


async def open_mini_app_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Respond to the ¬´open mini app¬ª callback button."""

    query = update.callback_query
    await query.answer()

    mini_app_message = (
        "üì± *Mini App SoulMine*\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—ë–≥–∫—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä—è–º–æ –≤ Telegram:\n\n"
        "üëâ [–û—Ç–∫—Ä—ã—Ç—å Mini App](https://t.me/soulmine_bot?startapp=mini_app)\n\n"
        "Mini App –ø–æ–∑–≤–æ–ª—è–µ—Ç:\n"
        "‚Ä¢ –ë—ã—Å—Ç—Ä–æ –æ–±—â–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
        "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –±–∞–∑–æ–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã\n"
        "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏\n"
        "‚Ä¢ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —á–∞—Ç–∞—Ö\n\n"
        "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!"
    )

    await query.edit_message_text(
        mini_app_message,
        reply_markup=get_back_to_main_keyboard(),
        parse_mode="Markdown",
    )


async def back_to_main_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Return the user to the main reply keyboard."""

    query = update.callback_query
    await query.answer()

    await query.edit_message_text(
        "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*",
        parse_mode="Markdown",
    )

    await query.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
        reply_markup=get_main_keyboard(),
    )